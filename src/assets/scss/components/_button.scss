@use '../libs/skel' as skel;
@use 'sass:color';
@use '../libs/functions' as functions;

input[type='submit'],
input[type='reset'],
input[type='button'],
button,
.button {
  @include skel.vendor('appearance', 'none');
  @include skel.vendor(
    'transition',
    (
      'background-color #{functions.duration(transition)} ease',
      'box-shadow #{functions.duration(transition)} ease',
      'color #{functions.duration(transition)} ease'
    )
  );
  background-color: transparent;
  border: 0;
  box-shadow: inset 0 0 0 1px functions.palette(border);
  color: functions.palette(fg-bold);
  cursor: pointer;
  display: inline-block;
  font-family: functions.font(family-heading);
  font-size: 0.6em;
  font-weight: functions.font(weight-heading-bold);
  height: functions.size(element-height) * 1.75;
  letter-spacing: functions.font(kerning-heading);
  line-height: functions.size(element-height) * 1.75;
  padding: 0 2.5em;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  white-space: nowrap;

  &:hover {
    box-shadow: inset 0 0 0 1px functions.palette(accent);
    color: functions.palette(accent) !important;

    &:active {
      background-color: color.adjust(functions.palette(accent), $alpha: -0.95);
    }
  }

  &:before,
  &:after {
    color: functions.palette(fg-light);
    position: relative;
  }

  &:before {
    left: -1em;
    padding: 0 0 0 0.75em;
  }

  &:after {
    left: 1em;
    padding: 0 0.75em 0 0;
  }

  &.fit {
    display: block;
    margin: 0 0 (functions.size(element-margin) * 0.5) 0;
    width: 100%;
  }

  &.big {
    font-size: 0.7em;
    padding: 0 3em;
  }

  &.small {
    font-size: 0.5em;
  }

  &.disabled,
  &:disabled {
    @include skel.vendor('pointer-events', 'none');
    color: functions.palette(border) !important;

    &:before {
      color: functions.palette(border) !important;
    }
  }

  &.opposite {
    background-color: var(--bgThemeColor1Swapped);
    color: var(--textThemeColor1Swapped);
  }
}
